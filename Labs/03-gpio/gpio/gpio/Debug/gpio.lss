
gpio.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000001ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000196  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000001ea  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000021c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  0000025c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000b08  00000000  00000000  000002c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000731  00000000  00000000  00000dcc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000003d4  00000000  00000000  000014fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000098  00000000  00000000  000018d4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000041f  00000000  00000000  0000196c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000155  00000000  00000000  00001d8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001ee0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 65 00 	call	0xca	; 0xca <main>
  78:	0c 94 c9 00 	jmp	0x192	; 0x192 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <GPIO_config_output>:
 **********************************************************************/
void GPIO_config_input_pullup(volatile uint8_t *reg_name, uint8_t pin_num)
{
    *reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
    reg_name++;                     // Change pointer to Data Register
    *reg_name = *reg_name | (1<<pin_num);   // Data Register
  80:	fc 01       	movw	r30, r24
  82:	40 81       	ld	r20, Z
  84:	21 e0       	ldi	r18, 0x01	; 1
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	02 c0       	rjmp	.+4      	; 0x8e <GPIO_config_output+0xe>
  8a:	22 0f       	add	r18, r18
  8c:	33 1f       	adc	r19, r19
  8e:	6a 95       	dec	r22
  90:	e2 f7       	brpl	.-8      	; 0x8a <GPIO_config_output+0xa>
  92:	24 2b       	or	r18, r20
  94:	20 83       	st	Z, r18
  96:	08 95       	ret

00000098 <GPIO_write_low>:
 * Input:    reg_name - Address of Port Register, such as &PORTB
 *           pin_num - Pin designation in the interval 0 to 7
 * Returns:  none
 **********************************************************************/
void GPIO_write_low(volatile uint8_t *reg_name, uint8_t pin_num)
{
  98:	fc 01       	movw	r30, r24
    *reg_name = *reg_name & ~(1<<pin_num);
  9a:	90 81       	ld	r25, Z
  9c:	21 e0       	ldi	r18, 0x01	; 1
  9e:	30 e0       	ldi	r19, 0x00	; 0
  a0:	02 c0       	rjmp	.+4      	; 0xa6 <GPIO_write_low+0xe>
  a2:	22 0f       	add	r18, r18
  a4:	33 1f       	adc	r19, r19
  a6:	6a 95       	dec	r22
  a8:	e2 f7       	brpl	.-8      	; 0xa2 <GPIO_write_low+0xa>
  aa:	20 95       	com	r18
  ac:	29 23       	and	r18, r25
  ae:	20 83       	st	Z, r18
  b0:	08 95       	ret

000000b2 <GPIO_write_high>:
/**********************************************************************
 * Function: GPIO_write_high()
 **********************************************************************/
void GPIO_write_high(volatile uint8_t *reg_name, uint8_t pin_num)
{    
    *reg_name = *reg_name | (1<<pin_num);  
  b2:	fc 01       	movw	r30, r24
  b4:	40 81       	ld	r20, Z
  b6:	21 e0       	ldi	r18, 0x01	; 1
  b8:	30 e0       	ldi	r19, 0x00	; 0
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <GPIO_write_high+0xe>
  bc:	22 0f       	add	r18, r18
  be:	33 1f       	adc	r19, r19
  c0:	6a 95       	dec	r22
  c2:	e2 f7       	brpl	.-8      	; 0xbc <GPIO_write_high+0xa>
  c4:	24 2b       	or	r18, r20
  c6:	20 83       	st	Z, r18
  c8:	08 95       	ret

000000ca <main>:
 * Returns:  none
 **********************************************************************/
int main(void)
{
    // Green LED at port B
    GPIO_config_output(&DDRB, LED_GREEN);
  ca:	65 e0       	ldi	r22, 0x05	; 5
  cc:	84 e2       	ldi	r24, 0x24	; 36
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 40 00 	call	0x80	; 0x80 <GPIO_config_output>
    GPIO_write_high(&DDRB, LED_GREEN);
  d4:	65 e0       	ldi	r22, 0x05	; 5
  d6:	84 e2       	ldi	r24, 0x24	; 36
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	0e 94 59 00 	call	0xb2	; 0xb2 <GPIO_write_high>
    GPIO_write_low(&PORTB, LED_GREEN);
  de:	65 e0       	ldi	r22, 0x05	; 5
  e0:	85 e2       	ldi	r24, 0x25	; 37
  e2:	90 e0       	ldi	r25, 0x00	; 0
  e4:	0e 94 4c 00 	call	0x98	; 0x98 <GPIO_write_low>

    // Configure the second LED at port C
    GPIO_config_output(&DDRC, LED_RED);
  e8:	65 e0       	ldi	r22, 0x05	; 5
  ea:	87 e2       	ldi	r24, 0x27	; 39
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	0e 94 40 00 	call	0x80	; 0x80 <GPIO_config_output>
    GPIO_write_high(&DDRC, LED_RED);
  f2:	65 e0       	ldi	r22, 0x05	; 5
  f4:	87 e2       	ldi	r24, 0x27	; 39
  f6:	90 e0       	ldi	r25, 0x00	; 0
  f8:	0e 94 59 00 	call	0xb2	; 0xb2 <GPIO_write_high>
    GPIO_write_low(&PORTC, LED_RED);
  fc:	65 e0       	ldi	r22, 0x05	; 5
  fe:	88 e2       	ldi	r24, 0x28	; 40
 100:	90 e0       	ldi	r25, 0x00	; 0
 102:	0e 94 4c 00 	call	0x98	; 0x98 <GPIO_write_low>

    // Configure Push button at port D and enable internal pull-up resistor
    
    DDRD = DDRD &~ (0<<BUTTON);
 106:	8a b1       	in	r24, 0x0a	; 10
 108:	8a b9       	out	0x0a, r24	; 10
    
    PORTD = PORTD | (1<<BUTTON);
 10a:	5a 9a       	sbi	0x0b, 2	; 11
        */
        
        
        //GPIO_config_output(&DDRC, LED_RED);
        
        GPIO_config_output(&DDRB, LED_GREEN);
 10c:	65 e0       	ldi	r22, 0x05	; 5
 10e:	84 e2       	ldi	r24, 0x24	; 36
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	0e 94 40 00 	call	0x80	; 0x80 <GPIO_config_output>
        GPIO_config_output(&DDRC, LED_RED);
 116:	65 e0       	ldi	r22, 0x05	; 5
 118:	87 e2       	ldi	r24, 0x27	; 39
 11a:	90 e0       	ldi	r25, 0x00	; 0
 11c:	0e 94 40 00 	call	0x80	; 0x80 <GPIO_config_output>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 120:	2f ef       	ldi	r18, 0xFF	; 255
 122:	80 e8       	ldi	r24, 0x80	; 128
 124:	99 e2       	ldi	r25, 0x29	; 41
 126:	21 50       	subi	r18, 0x01	; 1
 128:	80 40       	sbci	r24, 0x00	; 0
 12a:	90 40       	sbci	r25, 0x00	; 0
 12c:	e1 f7       	brne	.-8      	; 0x126 <main+0x5c>
 12e:	00 c0       	rjmp	.+0      	; 0x130 <main+0x66>
 130:	00 00       	nop
        
        _delay_ms(BLINK_DELAY);
        GPIO_write_high(&DDRC, LED_RED);
 132:	65 e0       	ldi	r22, 0x05	; 5
 134:	87 e2       	ldi	r24, 0x27	; 39
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	0e 94 59 00 	call	0xb2	; 0xb2 <GPIO_write_high>
 13c:	2f ef       	ldi	r18, 0xFF	; 255
 13e:	80 e8       	ldi	r24, 0x80	; 128
 140:	99 e2       	ldi	r25, 0x29	; 41
 142:	21 50       	subi	r18, 0x01	; 1
 144:	80 40       	sbci	r24, 0x00	; 0
 146:	90 40       	sbci	r25, 0x00	; 0
 148:	e1 f7       	brne	.-8      	; 0x142 <main+0x78>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <main+0x82>
 14c:	00 00       	nop
        _delay_ms(BLINK_DELAY);
        GPIO_write_low(&DDRC, LED_RED);
 14e:	65 e0       	ldi	r22, 0x05	; 5
 150:	87 e2       	ldi	r24, 0x27	; 39
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	0e 94 4c 00 	call	0x98	; 0x98 <GPIO_write_low>
 158:	2f ef       	ldi	r18, 0xFF	; 255
 15a:	80 e8       	ldi	r24, 0x80	; 128
 15c:	99 e2       	ldi	r25, 0x29	; 41
 15e:	21 50       	subi	r18, 0x01	; 1
 160:	80 40       	sbci	r24, 0x00	; 0
 162:	90 40       	sbci	r25, 0x00	; 0
 164:	e1 f7       	brne	.-8      	; 0x15e <main+0x94>
 166:	00 c0       	rjmp	.+0      	; 0x168 <main+0x9e>
 168:	00 00       	nop
        _delay_ms(BLINK_DELAY);
        GPIO_write_high(&DDRB, LED_GREEN);
 16a:	65 e0       	ldi	r22, 0x05	; 5
 16c:	84 e2       	ldi	r24, 0x24	; 36
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 59 00 	call	0xb2	; 0xb2 <GPIO_write_high>
 174:	2f ef       	ldi	r18, 0xFF	; 255
 176:	80 e8       	ldi	r24, 0x80	; 128
 178:	99 e2       	ldi	r25, 0x29	; 41
 17a:	21 50       	subi	r18, 0x01	; 1
 17c:	80 40       	sbci	r24, 0x00	; 0
 17e:	90 40       	sbci	r25, 0x00	; 0
 180:	e1 f7       	brne	.-8      	; 0x17a <main+0xb0>
 182:	00 c0       	rjmp	.+0      	; 0x184 <main+0xba>
 184:	00 00       	nop
        _delay_ms(BLINK_DELAY);
        GPIO_write_low(&PORTB, LED_GREEN);
 186:	65 e0       	ldi	r22, 0x05	; 5
 188:	85 e2       	ldi	r24, 0x25	; 37
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	0e 94 4c 00 	call	0x98	; 0x98 <GPIO_write_low>
 190:	bd cf       	rjmp	.-134    	; 0x10c <main+0x42>

00000192 <_exit>:
 192:	f8 94       	cli

00000194 <__stop_program>:
 194:	ff cf       	rjmp	.-2      	; 0x194 <__stop_program>
